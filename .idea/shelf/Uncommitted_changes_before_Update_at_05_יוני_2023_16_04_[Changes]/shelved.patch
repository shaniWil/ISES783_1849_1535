Index: src/renderer/Camera.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package renderer;\r\n\r\nimport primitives.Color;\r\nimport primitives.Point;\r\nimport primitives.Ray;\r\nimport primitives.Vector;\r\n\r\nimport java.util.MissingResourceException;\r\n\r\nimport static primitives.Util.alignZero;\r\nimport static primitives.Util.isZero;\r\n\r\n/** A class for representing the camera\r\n * @author Raaya Feldmar & Shani Wilamowsky */\r\npublic class Camera {\r\n    private final Point location;\r\n    private final Vector vUp;\r\n    private final Vector vRight;\r\n    private final Vector vTo;\r\n    private double height;\r\n    private double width;\r\n    private double distance;\r\n    private ImageWriter imageWriter;\r\n    private RayTracerBase rayTracer;\r\n\r\n    public Camera(Point location, Vector vTo, Vector vUp) {\r\n        if (!isZero(vUp.dotProduct(vTo)))\r\n            throw new IllegalArgumentException(\"vUp and vTO are not orthogonal\");\r\n        this.location = location;\r\n        this.vUp = vUp.normalize();\r\n        this.vTo = vTo.normalize();\r\n        this.vRight = (vUp.crossProduct(vTo)).normalize();\r\n\r\n    }\r\n\r\n    // getters & setters.\r\n    public Point getLocation() {\r\n        return location;\r\n    }\r\n\r\n    public Vector getvUp() {\r\n        return vUp;\r\n    }\r\n\r\n\r\n    public Vector getvRight() {\r\n        return vRight;\r\n    }\r\n\r\n    public Vector getvTo() {\r\n        return vTo;\r\n    }\r\n\r\n    public double getHeight() {\r\n        return height;\r\n    }\r\n\r\n    public double getWidth() {\r\n        return width;\r\n    }\r\n\r\n    public double getDistance() {\r\n        return distance;\r\n    }\r\n\r\n    public Camera setVPSize(double widthIn, double heightIn) {\r\n        if (isZero(widthIn) || isZero(heightIn))\r\n            throw new IllegalArgumentException(\"the width or the height is zero\");\r\n        width = widthIn;\r\n        height = heightIn;\r\n        return this;\r\n    }\r\n\r\n    public Camera setVPDistance(double distanceIn) {\r\n        if (isZero(distanceIn))\r\n            throw new IllegalArgumentException(\"the distance is zero\");\r\n        distance = distanceIn;\r\n        return this;\r\n    }\r\n\r\n   public  Camera setImageWriter(ImageWriter ImageWriterIn) {\r\n        this.imageWriter = ImageWriterIn;\r\n        return this;\r\n    }\r\n\r\n    public Camera setRayTracer(RayTracerBase rayTracer) {\r\n        this.rayTracer = rayTracer;\r\n        return this;\r\n    }\r\n    \r\n    /**\r\n     * Constructs a ray from the camera through pixel i,j.\r\n     * @param nX number of pixels on the width of the view plane.\r\n     * @param nY number of pixels on the height of the view plane.\r\n     * @param j location of the pixel in the X direction.\r\n     * @param i location of the pixel in the Y direction.\r\n     * @return the constructed ray - from p0 through the wanted pixel.\r\n     */\r\n    public Ray constructRay(int nX, int nY, int j, int i) {\r\n        Point pIJ = location.add(vTo.scale(distance));\r\n        double rY = alignZero(height / nY);\r\n        double rX = alignZero(width / nX);\r\n        double yI = alignZero((i - (nY - 1.0) / 2.0) * ((-1) * rY));\r\n        double xJ = alignZero((j - (nX - 1.0) / 2.0) * ((-1) * rX));\r\n        if (!isZero(yI))\r\n            pIJ = pIJ.add(vUp.scale(yI));\r\n        if (!isZero(xJ))\r\n            pIJ = pIJ.add(vRight.scale(xJ));\r\n        return new Ray(location, pIJ.subtract(location));\r\n    }\r\n\r\n    private Color castRay(int j, int i) {\r\n        return rayTracer.traceRay(constructRay(imageWriter.getNx(), imageWriter.getNy(), j, i));\r\n    }\r\n    \r\n    /**\r\n     * render the image and fill the pixels with the desired colors\r\n     * using the ray tracer to find the colors\r\n     * and the image writer to color the pixels\r\n     * @throws MissingResourceException if one of the fields are uninitialized\r\n     */\r\n    public Camera renderImage() {\r\n        if (imageWriter == null)\r\n            throw new MissingResourceException(\"All of the filed should be initialized\",\r\n                    \"Camera\",\r\n                    \"imageWriter\");\r\n        if (rayTracer == null)\r\n            throw new MissingResourceException(\"All of the filed should be initialized\",\r\n                    \"Camera\",\r\n                    \"rayTracer\");\r\n        for (int i = 0; i < imageWriter.getNx(); i++) {\r\n            for (int j = 0; j < imageWriter.getNy(); j++) {\r\n                imageWriter.writePixel(j, i, castRay(j, i));\r\n            }\r\n\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n    * Print a grid on the image without running over the original image\r\n    * @param interval the size of the grid squares\r\n    * @param color the color of the grid\r\n    * @throws MissingResourceException\r\n    */\r\n    public void printGrid(int interval, Color color) {\r\n      //  renderImage();\r\n        for (int i = 0; i < imageWriter.getNx(); i+=interval) {\r\n            for (int j = 0; j < imageWriter.getNy(); j++)\r\n                imageWriter.writePixel(i, j, color);\r\n        }\r\n        for (int i = 0; i < imageWriter.getNx(); i++) {\r\n            for (int j = 0; j < imageWriter.getNy(); j += interval)\r\n                imageWriter.writePixel(i, j, color);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Create the image file using the image writer\r\n     */\r\n    public void writeToImage() {\r\n        if (imageWriter == null)\r\n            throw new MissingResourceException(\"All of the filed should be initialized\",\r\n                    \"Camera\",\r\n                    \"imageWriter\");\r\n        imageWriter.writeToImage();\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/renderer/Camera.java b/src/renderer/Camera.java
--- a/src/renderer/Camera.java	(revision 8be4510254df2ccfbcec66f4e0ec9f3c44c5ca5a)
+++ b/src/renderer/Camera.java	(date 1685868388172)
@@ -33,6 +33,17 @@
 
     }
 
+    protected Vector scaleDegreesXY(Vector vector, int degrees)
+    {
+        return vector;
+    }
+
+    public Camera spinCamera(double r, int amount){
+        Point center = location.add(vTo.scale(r));
+
+        return this;
+    }
+
     // getters & setters.
     public Point getLocation() {
         return location;
Index: src/geometries/Geometries.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package geometries;\r\n\r\nimport primitives.Point;\r\nimport primitives.Ray;\r\n\r\nimport java.util.Arrays;\r\nimport java.util.Collections;\r\nimport java.util.LinkedList;\r\nimport java.util.List;\r\n\r\npublic class Geometries extends Intersectable {\r\n    private final List<Intersectable> geometries;\r\n\r\n    // Empty constructor.\r\n    public Geometries() {\r\n        this.geometries = new LinkedList<>();\r\n    }\r\n    public Geometries(Intersectable... geometriesIn) {\r\n\r\n        this.geometries = new LinkedList<>();\r\n\r\n        geometries.addAll(Arrays.asList(geometriesIn));\r\n    }\r\n\r\n    public void add(Intersectable... geometriesIn)\r\n    {\r\n        Collections.addAll(geometries, geometriesIn);\r\n    }\r\n\r\n    @Override\r\n    protected List<GeoPoint> findGeoIntersectionsHelper(Ray ray) {\r\n        List<GeoPoint> geoIntersection = new LinkedList<>();\r\n\r\n        //go threw all the geometries and add their intersections\r\n        for (Intersectable intersectable: geometries) {\r\n            List<GeoPoint> currentIntersection = intersectable.findGeoIntersections(ray);\r\n            if(currentIntersection != null) //no intersection was found\r\n                geoIntersection.addAll(currentIntersection);\r\n        }\r\n\r\n        if(geoIntersection.size() == 0)\r\n            return null;\r\n        return geoIntersection;\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/geometries/Geometries.java b/src/geometries/Geometries.java
--- a/src/geometries/Geometries.java	(revision 8be4510254df2ccfbcec66f4e0ec9f3c44c5ca5a)
+++ b/src/geometries/Geometries.java	(date 1685907430005)
@@ -8,23 +8,34 @@
 import java.util.LinkedList;
 import java.util.List;
 
+/** This class represents all the geometries body also complex geometries
+ * @author Raaya Feldmar & Shani Wilamowsky */
 public class Geometries extends Intersectable {
     private final List<Intersectable> geometries;
 
-    // Empty constructor.
+    /** Empty constructor.*/
     public Geometries() {
         this.geometries = new LinkedList<>();
     }
-    public Geometries(Intersectable... geometriesIn) {
+
+    /**
+     * constructor of complex geometric that get how many geometries.
+     * @param geometries
+     */
+    public Geometries(Intersectable... geometries) {
 
         this.geometries = new LinkedList<>();
 
-        geometries.addAll(Arrays.asList(geometriesIn));
+        this.geometries.addAll(Arrays.asList(geometries));
     }
 
-    public void add(Intersectable... geometriesIn)
+    /**
+     * adding geometries
+     * @param geometries
+     */
+    public void add(Intersectable... geometries)
     {
-        Collections.addAll(geometries, geometriesIn);
+        Collections.addAll(this.geometries, geometries);
     }
 
     @Override
Index: unittests/lighting/LightTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package lighting;\r\n\r\nimport static java.awt.Color.*;\r\n\r\nimport org.junit.jupiter.api.Test;\r\n\r\nimport geometries.*;\r\nimport lighting.*;\r\nimport primitives.*;\r\nimport renderer.*;\r\nimport scene.Scene;\r\n\r\nclass LightTest {\r\n    private final Scene scene1 = new Scene(\"Test scene\");\r\n    private final Scene scene2 = new Scene(\"Test scene\")\r\n            .setAmbientLight(new AmbientLight(new Color(WHITE), new Double3(0.15)));\r\n\r\n    private final Camera camera1 = new Camera(new Point(0, 0, 1000),\r\n            new Vector(0, 0, -1), new Vector(0, 1, 0))\r\n            .setVPSize(150, 150).setVPDistance(1000);\r\n    private final Camera camera2 = new Camera(new Point(0, 0, 1000),\r\n            new Vector(0, 0, -1), new Vector(0, 1, 0))\r\n            .setVPSize(200, 200).setVPDistance(1000);\r\n\r\n    private static final int SHININESS = 301;\r\n    private static final double KD = 0.5;\r\n    private static final Double3 KD3 = new Double3(0.2, 0.6, 0.4);\r\n\r\n    private static final double KS = 0.5;\r\n    private static final Double3 KS3 = new Double3(0.2, 0.4, 0.3);\r\n\r\n    private final Material material = new Material().setKd(KD3).setKs(KS3).setShininess(SHININESS);\r\n    private final Color trianglesLightColor = new Color(800, 500, 250);\r\n    private final Color sphereLightColor = new Color(800, 500, 0);\r\n    private final Color sphereColor = new Color(BLUE).reduce(2);\r\n\r\n    private final Point sphereCenter = new Point(0, 0, -50);\r\n    private static final double SPHERE_RADIUS = 50d;\r\n\r\n    // The triangles' vertices:\r\n    private final Point[] vertices =\r\n            {\r\n                    // the shared left-bottom:\r\n                    new Point(-110, -110, -150),\r\n                    // the shared right-top:\r\n                    new Point(95, 100, -150),\r\n                    // the right-bottom\r\n                    new Point(110, -110, -150),\r\n                    // the left-top\r\n                    new Point(-75, 78, 100)\r\n            };\r\n    private final Point sphereLightPosition = new Point(-50, -50, 25);\r\n    private final Point trianglesLightPosition = new Point(30, 10, -100);\r\n    private final Vector trianglesLightDirection = new Vector(-2, -2, -2);\r\n\r\n    private final Geometry sphere = new Sphere(SPHERE_RADIUS, sphereCenter)\r\n            .setEmission(sphereColor).setMaterial(new Material().setKd(KD).setKs(KS).setShininess(SHININESS));\r\n    private final Geometry triangle1 = new Triangle(vertices[0], vertices[1], vertices[2])\r\n            .setMaterial(material);\r\n    private final Geometry triangle2 = new Triangle(vertices[0], vertices[1], vertices[3])\r\n            .setMaterial(material);\r\n\r\n    /**\r\n     * Produce a picture of a sphere lighted by a directional light\r\n     */\r\n    @Test\r\n    public void sphereDirectional() {\r\n        scene1.geometries.add(sphere);\r\n        scene1.lights.add(new DirectionalLight(sphereLightColor, new Vector(1, 1, -0.5)));\r\n\r\n        ImageWriter imageWriter = new ImageWriter(\"lightSphereDirectional\", 500, 500);\r\n        camera1.setImageWriter(imageWriter) //\r\n                .setRayTracer(new RayTracerBasic(scene1)) //\r\n                .renderImage() //\r\n                .writeToImage(); //\r\n    }\r\n\r\n    /**\r\n     * Produce a picture of a sphere lighted by a point light\r\n     */\r\n    @Test\r\n    public void spherePoint() {\r\n        scene1.geometries.add(sphere);\r\n        scene1.lights.add(new PointLight(sphereLightColor, sphereLightPosition)\r\n                .setKl(0.001).setKq(0.0002));\r\n\r\n        ImageWriter imageWriter = new ImageWriter(\"lightSpherePoint\", 500, 500);\r\n        camera1.setImageWriter(imageWriter) //\r\n                .setRayTracer(new RayTracerBasic(scene1)) //\r\n                .renderImage() //\r\n                .writeToImage(); //\r\n    }\r\n\r\n    /**\r\n     * Produce a picture of a sphere lighted by a spotlight\r\n     */\r\n    @Test\r\n    public void sphereSpot() {\r\n        scene1.geometries.add(sphere);\r\n        scene1.lights.add(new SpotLight(sphereLightColor, sphereLightPosition, new Vector(1, 1, -0.5))\r\n                .setKl(0.001).setKq(0.0001));\r\n\r\n        ImageWriter imageWriter = new ImageWriter(\"lightSphereSpot\", 500, 500);\r\n        camera1.setImageWriter(imageWriter) //\r\n                .setRayTracer(new RayTracerBasic(scene1)) //\r\n                .renderImage() //\r\n                .writeToImage(); //\r\n    }\r\n\r\n    /**\r\n     * Produce a picture of two triangles lighted by a directional light\r\n     */\r\n    @Test\r\n    public void trianglesDirectional() {\r\n        scene2.geometries.add(triangle1, triangle2);\r\n        scene2.lights.add(new DirectionalLight(trianglesLightColor, trianglesLightDirection));\r\n\r\n        ImageWriter imageWriter = new ImageWriter(\"lightTrianglesDirectional\", 500, 500);\r\n        camera2.setImageWriter(imageWriter) //\r\n                .setRayTracer(new RayTracerBasic(scene2)) //\r\n                .renderImage() //\r\n                .writeToImage(); //\r\n    }\r\n\r\n    /**\r\n     * Produce a picture of two triangles lighted by a point light\r\n     */\r\n    @Test\r\n    public void trianglesPoint() {\r\n        scene2.geometries.add(triangle1, triangle2);\r\n        scene2.lights.add(new PointLight(trianglesLightColor, trianglesLightPosition)\r\n                .setKl(0.001).setKq(0.0002));\r\n\r\n        ImageWriter imageWriter = new ImageWriter(\"lightTrianglesPoint\", 500, 500);\r\n        camera2.setImageWriter(imageWriter) //\r\n                .setRayTracer(new RayTracerBasic(scene2)) //\r\n                .renderImage() //\r\n                .writeToImage(); //\r\n    }\r\n\r\n    /**\r\n     * Produce a picture of two triangles lighted by a spotlight\r\n     */\r\n    @Test\r\n    public void trianglesSpot() {\r\n        scene2.geometries.add(triangle1, triangle2);\r\n        scene2.lights.add(new SpotLight(trianglesLightColor, trianglesLightPosition, trianglesLightDirection)\r\n                .setKl(0.001).setKq(0.0001));\r\n\r\n        ImageWriter imageWriter = new ImageWriter(\"lightTrianglesSpot\", 500, 500);\r\n        camera2.setImageWriter(imageWriter) //\r\n                .setRayTracer(new RayTracerBasic(scene2)) //\r\n                .renderImage() //\r\n                .writeToImage(); //\r\n    }\r\n\r\n    @Test\r\n    public void sphereMultipleLights() {\r\n        scene1.geometries.add(sphere);\r\n        scene1.lights.add(new DirectionalLight(new Color(250, 0,0), new Vector(0, -10, -0.5)));\r\n        scene1.lights.add(new PointLight(new Color(0,250,0), sphereLightPosition)\r\n                .setKl(0.001).setKq(0.0002));\r\n        scene1.lights.add(new SpotLight(new Color(100, 250, 250), new Point(100, 50, -25), new Vector(-2, -0.1, 0.1))\r\n                  .setKl(0.001).setKq(0.0001));\r\n\r\n\r\n        ImageWriter imageWriter = new ImageWriter(\"multiLightSphere\", 500, 500);\r\n        camera1.setImageWriter(imageWriter) //\r\n                .setRayTracer(new RayTracerBasic(scene1)) //\r\n                .renderImage() //\r\n                .writeToImage(); //\r\n    }\r\n\r\n    /**\r\n     * Produce a picture of a sphere lighted by a narrow spotlight\r\n     */\r\n   // @Test\r\n    //public void sphereSpotSharp() {\r\n      //  scene1.geometries.add(sphere);\r\n        //scene1.lights\r\n          //      .add(new SpotLight(sphereLightColor, sphereLightPosition, new Vector(1, 1, -0.5))\r\n            //            .setNarrowBeam(10).setKl(0.001).setKq(0.00004));\r\n\r\n        //ImageWriter imageWriter = new ImageWriter(\"lightSphereSpotSharp\", 500, 500);\r\n        //camera1.setImageWriter(imageWriter) //\r\n          //      .setRayTracer(new RayTracerBasic(scene1)) //\r\n            //    .renderImage() //\r\n              //  .writeToImage(); //\r\n   // }\r\n\r\n    /**\r\n     * Produce a picture of two triangles lighted by a narrow spotlight\r\n     */\r\n    //@Test\r\n   // public void trianglesSpotSharp() {\r\n     //   scene2.geometries.add(triangle1, triangle2);\r\n       // scene2.lights.add(new SpotLight(trianglesLightColor, trianglesLightPosition, trianglesLightDirection)\r\n         //       .setNarrowBeam(10).setKl(0.001).setKq(0.00004));\r\n\r\n        //ImageWriter imageWriter = new ImageWriter(\"lightTrianglesSpotSharp\", 500, 500);\r\n        //camera2.setImageWriter(imageWriter) //\r\n          //      .setRayTracer(new RayTracerBasic(scene2)) //\r\n            //    .renderImage() //\r\n              //  .writeToImage(); //\r\n    //}\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/unittests/lighting/LightTest.java b/unittests/lighting/LightTest.java
--- a/unittests/lighting/LightTest.java	(revision 8be4510254df2ccfbcec66f4e0ec9f3c44c5ca5a)
+++ b/unittests/lighting/LightTest.java	(date 1685907636895)
@@ -154,13 +154,16 @@
                 .writeToImage(); //
     }
 
+    /**
+     * Produce a picture of sphere lighted by a multi lights.
+     */
     @Test
     public void sphereMultipleLights() {
         scene1.geometries.add(sphere);
         scene1.lights.add(new DirectionalLight(new Color(250, 0,0), new Vector(0, -10, -0.5)));
-        scene1.lights.add(new PointLight(new Color(0,250,0), sphereLightPosition)
+        scene1.lights.add(new PointLight(new Color(250,250,0), sphereLightPosition)
                 .setKl(0.001).setKq(0.0002));
-        scene1.lights.add(new SpotLight(new Color(100, 250, 250), new Point(100, 50, -25), new Vector(-2, -0.1, 0.1))
+        scene1.lights.add(new SpotLight(new Color(0, 250, 250), new Point(100, 50, -25), new Vector(-2, -0.1, 0.1))
                   .setKl(0.001).setKq(0.0001));
 
 
@@ -170,6 +173,25 @@
                 .renderImage() //
                 .writeToImage(); //
     }
+
+    /**
+     * Produce a picture of two triangles lighted by a spotlight
+     */
+    @Test
+    public void trianglesMultiLights() {
+        scene2.geometries.add(triangle1, triangle2);
+        scene2.lights.add(new DirectionalLight(new Color(250, 0,0), new Vector(25, 10, -100)));
+        scene2.lights.add(new PointLight(new Color(250,250,0), trianglesLightPosition)
+                .setKl(0.001).setKq(0.0002));
+        scene2.lights.add(new SpotLight(new Color(0, 0, 250), new Point(100, 50, -25), new Vector(-1, 0, -0.5))
+                .setKl(0.001).setKq(0.0001));
+
+        ImageWriter imageWriter = new ImageWriter("lightTrianglesMulti", 500, 500);
+        camera2.setImageWriter(imageWriter) //
+                .setRayTracer(new RayTracerBasic(scene2)) //
+                .renderImage() //
+                .writeToImage(); //
+    }
 
     /**
      * Produce a picture of a sphere lighted by a narrow spotlight
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"1668f80d-d29d-43f8-82d9-a816d4680a2d\" name=\"Changes\" comment=\"stage6 part A\">\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/uiDesigner.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/lighting/DirectionalLight.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/lighting/Light.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/lighting/LightSource.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/lighting/PointLight.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/lighting/SpotLight.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/primitives/Material.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/unittests/lighting/LightTest.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/geometries/Geometry.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/geometries/Geometry.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/lighting/AmbientLight.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/lighting/AmbientLight.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/primitives/Point.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/primitives/Point.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/primitives/Ray.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/primitives/Ray.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/renderer/Camera.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/renderer/Camera.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/renderer/RayTracerBasic.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/renderer/RayTracerBasic.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/scene/Scene.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/scene/Scene.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/unittests/primitives/PointTest.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/unittests/primitives/PointTest.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Interface\" />\r\n        <option value=\"Class\" />\r\n        <option value=\"JUnit5 Test Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"PUSH_TAGS\">\r\n      <GitPushTagMode>\r\n        <option name=\"argument\" value=\"--tags\" />\r\n        <option name=\"title\" value=\"All\" />\r\n      </GitPushTagMode>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">\r\n    <option name=\"selectedUrlAndAccountId\">\r\n      <UrlAndAccount>\r\n        <option name=\"accountId\" value=\"346f3821-708b-4ddc-8fe7-17d464600f3c\" />\r\n        <option name=\"url\" value=\"https://github.com/shaniWil/ISES783.git\" />\r\n      </UrlAndAccount>\r\n    </option>\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2MGkOgIOrvRqHv7nWNzXlwbuCEI\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;Downloaded.Files.Path.Enabled&quot;: &quot;false&quot;,\r\n    &quot;Repository.Attach.Annotations&quot;: &quot;false&quot;,\r\n    &quot;Repository.Attach.JavaDocs&quot;: &quot;false&quot;,\r\n    &quot;Repository.Attach.Sources&quot;: &quot;false&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\r\n    &quot;com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrary&quot;: &quot;JUnit5&quot;,\r\n    &quot;com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrarySuperClass.JUnit5&quot;: &quot;&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;Libraries&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.0&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.0&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CreateClassDialog.RecentsKey\">\r\n      <recent name=\"primitives\" />\r\n    </key>\r\n    <key name=\"CreateTestDialog.Recents.Supers\">\r\n      <recent name=\"\" />\r\n    </key>\r\n    <key name=\"MoveClassesOrPackagesDialog.RECENTS_KEY\">\r\n      <recent name=\"lighting\" />\r\n    </key>\r\n    <key name=\"CreateTestDialog.RecentsKey\">\r\n      <recent name=\"lighting\" />\r\n      <recent name=\"renderer\" />\r\n      <recent name=\"primitives\" />\r\n      <recent name=\"render\" />\r\n      <recent name=\"geometries\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"JUnit.LightTest.sphereMultipleLights\">\r\n    <configuration name=\"All in ISES783_1849_1535\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"ISES783_1849_1535\" />\r\n      <option name=\"PACKAGE_NAME\" value=\"\" />\r\n      <option name=\"TEST_OBJECT\" value=\"package\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"LightTest.sphereDirectional\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"ISES783_1849_1535\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"lighting.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"lighting\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"lighting.LightTest\" />\r\n      <option name=\"METHOD_NAME\" value=\"sphereDirectional\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"LightTest.sphereMultipleLights\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"ISES783_1849_1535\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"lighting.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"lighting\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"lighting.LightTest\" />\r\n      <option name=\"METHOD_NAME\" value=\"sphereMultipleLights\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"RenderTests\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"ISES783_1849_1535\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"renderer.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"renderer\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"renderer.RenderTests\" />\r\n      <option name=\"TEST_OBJECT\" value=\"class\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"RenderTests.basicRenderMultiColorTest\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"ISES783_1849_1535\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"renderer.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"renderer\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"renderer.RenderTests\" />\r\n      <option name=\"METHOD_NAME\" value=\"basicRenderMultiColorTest\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"JUnit.LightTest.sphereMultipleLights\" />\r\n        <item itemvalue=\"JUnit.All in ISES783_1849_1535\" />\r\n        <item itemvalue=\"JUnit.LightTest.sphereDirectional\" />\r\n        <item itemvalue=\"JUnit.RenderTests.basicRenderMultiColorTest\" />\r\n        <item itemvalue=\"JUnit.RenderTests\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"1668f80d-d29d-43f8-82d9-a816d4680a2d\" name=\"Changes\" comment=\"\" />\r\n      <created>1677401280196</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1677401280196</updated>\r\n      <workItem from=\"1677401281488\" duration=\"3865000\" />\r\n      <workItem from=\"1678625212565\" duration=\"1193000\" />\r\n      <workItem from=\"1679243755357\" duration=\"2792000\" />\r\n      <workItem from=\"1679388693297\" duration=\"17395000\" />\r\n      <workItem from=\"1681643559822\" duration=\"1715000\" />\r\n      <workItem from=\"1681991076300\" duration=\"38191000\" />\r\n    </task>\r\n    <task id=\"LOCAL\u200E-00001\" summary=\"first commit\">\r\n      <created>1677404490895</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL\u200E-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\u200E\" />\r\n      <updated>1677404490895</updated>\r\n    </task>\r\n    <task id=\"LOCAL\u200E-00002\" summary=\"Stage1 Final\">\r\n      <created>1679395803105</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL\u200E-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\u200E\" />\r\n      <updated>1679395803105</updated>\r\n    </task>\r\n    <task id=\"LOCAL\u200E-00003\" summary=\"Stage1 Final without documentation\">\r\n      <created>1679397397616</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL\u200E-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\u200E\" />\r\n      <updated>1679397397616</updated>\r\n    </task>\r\n    <task id=\"LOCAL\u200E-00004\" summary=\"Stage1 Final with documentations on geometries\">\r\n      <created>1679407429953</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL\u200E-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\u200E\" />\r\n      <updated>1679407429953</updated>\r\n    </task>\r\n    <task id=\"LOCAL\u200E-00005\" summary=\"add names\">\r\n      <created>1679491415032</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL\u200E-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\u200E\" />\r\n      <updated>1679491415032</updated>\r\n    </task>\r\n    <task id=\"LOCAL\u200E-00006\" summary=\"stage 2 without documentation\">\r\n      <created>1681400516056</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL\u200E-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\u200E\" />\r\n      <updated>1681400516056</updated>\r\n    </task>\r\n    <task id=\"LOCAL\u200E-00007\" summary=\"documentation for vector\">\r\n      <created>1681476730355</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL\u200E-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\u200E\" />\r\n      <updated>1681476730355</updated>\r\n    </task>\r\n    <task id=\"LOCAL\u200E-00008\" summary=\"documentation for plane\">\r\n      <created>1681477166288</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL\u200E-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\u200E\" />\r\n      <updated>1681477166288</updated>\r\n    </task>\r\n    <task id=\"LOCAL\u200E-00009\" summary=\"Stage2 final.\">\r\n      <created>1681590423789</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL\u200E-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\u200E\" />\r\n      <updated>1681590423789</updated>\r\n    </task>\r\n    <task id=\"LOCAL\u200E-00010\" summary=\"Stage2 final.\">\r\n      <created>1681640544682</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL\u200E-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\u200E\" />\r\n      <updated>1681640544682</updated>\r\n    </task>\r\n    <task id=\"LOCAL\u200E-00011\" summary=\"Stage2 final, reformat code.\">\r\n      <created>1681643423987</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL\u200E-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\u200E\" />\r\n      <updated>1681643423987</updated>\r\n    </task>\r\n    <task id=\"LOCAL\u200E-00012\" summary=\"test with problems\">\r\n      <created>1683009039786</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL\u200E-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\u200E\" />\r\n      <updated>1683009039786</updated>\r\n    </task>\r\n    <task id=\"LOCAL\u200E-00013\" summary=\"Stage 5, adding image file.\">\r\n      <created>1683096841468</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL\u200E-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\u200E\" />\r\n      <updated>1683096841468</updated>\r\n    </task>\r\n    <task id=\"LOCAL\u200E-00014\" summary=\"stage6 part A\">\r\n      <created>1683539573343</created>\r\n      <option name=\"number\" value=\"00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL\u200E-00014\" />\r\n      <option name=\"project\" value=\"LOCAL\u200E\" />\r\n      <updated>1683539573343</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"15\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"first commit\" />\r\n    <MESSAGE value=\"Stage1 Final\" />\r\n    <MESSAGE value=\"Stage1 Final without documentation\" />\r\n    <MESSAGE value=\"Stage1 Final with documentations on geometries\" />\r\n    <MESSAGE value=\"add names\" />\r\n    <MESSAGE value=\"stage 2 without documentation\" />\r\n    <MESSAGE value=\"documentation for vector\" />\r\n    <MESSAGE value=\"documentation for plane\" />\r\n    <MESSAGE value=\"Stage2 final.\" />\r\n    <MESSAGE value=\"Stage2 final, reformat code.\" />\r\n    <MESSAGE value=\"test with problems\" />\r\n    <MESSAGE value=\"Stage 5, adding image file.\" />\r\n    <MESSAGE value=\"stage6 part A\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"stage6 part A\" />\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/unittests/geometries/TriangleTest.java</url>\r\n          <line>50</line>\r\n          <option name=\"timeStamp\" value=\"3\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/unittests/geometries/SphereTest.java</url>\r\n          <line>48</line>\r\n          <option name=\"timeStamp\" value=\"5\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/unittests/renderer/RenderTests.java</url>\r\n          <line>51</line>\r\n          <option name=\"timeStamp\" value=\"9\" />\r\n        </line-breakpoint>\r\n      </breakpoints>\r\n    </breakpoint-manager>\r\n  </component>\r\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\r\n    <expand />\r\n    <select />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 8be4510254df2ccfbcec66f4e0ec9f3c44c5ca5a)
+++ b/.idea/workspace.xml	(date 1685884582673)
@@ -4,24 +4,11 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="1668f80d-d29d-43f8-82d9-a816d4680a2d" name="Changes" comment="stage6 part A">
-      <change afterPath="$PROJECT_DIR$/.idea/uiDesigner.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/lighting/DirectionalLight.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/lighting/Light.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/lighting/LightSource.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/lighting/PointLight.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/lighting/SpotLight.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/primitives/Material.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/unittests/lighting/LightTest.java" afterDir="false" />
+    <list default="true" id="1668f80d-d29d-43f8-82d9-a816d4680a2d" name="Changes" comment="stage6 part A + B">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/geometries/Geometry.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/geometries/Geometry.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/lighting/AmbientLight.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/lighting/AmbientLight.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/primitives/Point.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/primitives/Point.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/primitives/Ray.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/primitives/Ray.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/geometries/Geometries.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/geometries/Geometries.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/renderer/Camera.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/renderer/Camera.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/renderer/RayTracerBasic.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/renderer/RayTracerBasic.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/scene/Scene.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/scene/Scene.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/unittests/primitives/PointTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/unittests/primitives/PointTest.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/unittests/lighting/LightTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/unittests/lighting/LightTest.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -61,6 +48,9 @@
   </component>
   <component name="MarkdownSettingsMigration">
     <option name="stateVersion" value="1" />
+  </component>
+  <component name="ProblemsViewState">
+    <option name="selectedTabId" value="ProjectErrors" />
   </component>
   <component name="ProjectId" id="2MGkOgIOrvRqHv7nWNzXlwbuCEI" />
   <component name="ProjectLevelVcsManager" settingsEditedManually="true">
@@ -110,7 +100,7 @@
       <recent name="geometries" />
     </key>
   </component>
-  <component name="RunManager" selected="JUnit.LightTest.sphereMultipleLights">
+  <component name="RunManager" selected="JUnit.LightTest.trianglesMultiLights">
     <configuration name="All in ISES783_1849_1535" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
       <module name="ISES783_1849_1535" />
       <option name="PACKAGE_NAME" value="" />
@@ -119,7 +109,7 @@
         <option name="Make" enabled="true" />
       </method>
     </configuration>
-    <configuration name="LightTest.sphereDirectional" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
+    <configuration name="LightTest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
       <module name="ISES783_1849_1535" />
       <extension name="coverage">
         <pattern>
@@ -129,8 +119,7 @@
       </extension>
       <option name="PACKAGE_NAME" value="lighting" />
       <option name="MAIN_CLASS_NAME" value="lighting.LightTest" />
-      <option name="METHOD_NAME" value="sphereDirectional" />
-      <option name="TEST_OBJECT" value="method" />
+      <option name="TEST_OBJECT" value="class" />
       <method v="2">
         <option name="Make" enabled="true" />
       </method>
@@ -151,32 +140,33 @@
         <option name="Make" enabled="true" />
       </method>
     </configuration>
-    <configuration name="RenderTests" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
+    <configuration name="LightTest.trianglesMultiLights" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
       <module name="ISES783_1849_1535" />
       <extension name="coverage">
         <pattern>
-          <option name="PATTERN" value="renderer.*" />
+          <option name="PATTERN" value="lighting.*" />
           <option name="ENABLED" value="true" />
         </pattern>
       </extension>
-      <option name="PACKAGE_NAME" value="renderer" />
-      <option name="MAIN_CLASS_NAME" value="renderer.RenderTests" />
-      <option name="TEST_OBJECT" value="class" />
+      <option name="PACKAGE_NAME" value="lighting" />
+      <option name="MAIN_CLASS_NAME" value="lighting.LightTest" />
+      <option name="METHOD_NAME" value="trianglesMultiLights" />
+      <option name="TEST_OBJECT" value="method" />
       <method v="2">
         <option name="Make" enabled="true" />
       </method>
     </configuration>
-    <configuration name="RenderTests.basicRenderMultiColorTest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
+    <configuration name="LightTest.trianglesSpot" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
       <module name="ISES783_1849_1535" />
       <extension name="coverage">
         <pattern>
-          <option name="PATTERN" value="renderer.*" />
+          <option name="PATTERN" value="lighting.*" />
           <option name="ENABLED" value="true" />
         </pattern>
       </extension>
-      <option name="PACKAGE_NAME" value="renderer" />
-      <option name="MAIN_CLASS_NAME" value="renderer.RenderTests" />
-      <option name="METHOD_NAME" value="basicRenderMultiColorTest" />
+      <option name="PACKAGE_NAME" value="lighting" />
+      <option name="MAIN_CLASS_NAME" value="lighting.LightTest" />
+      <option name="METHOD_NAME" value="trianglesSpot" />
       <option name="TEST_OBJECT" value="method" />
       <method v="2">
         <option name="Make" enabled="true" />
@@ -184,11 +174,11 @@
     </configuration>
     <recent_temporary>
       <list>
+        <item itemvalue="JUnit.LightTest.trianglesMultiLights" />
+        <item itemvalue="JUnit.LightTest" />
+        <item itemvalue="JUnit.LightTest.trianglesSpot" />
         <item itemvalue="JUnit.LightTest.sphereMultipleLights" />
         <item itemvalue="JUnit.All in ISES783_1849_1535" />
-        <item itemvalue="JUnit.LightTest.sphereDirectional" />
-        <item itemvalue="JUnit.RenderTests.basicRenderMultiColorTest" />
-        <item itemvalue="JUnit.RenderTests" />
       </list>
     </recent_temporary>
   </component>
@@ -305,7 +295,14 @@
       <option name="project" value="LOCAL‎" />
       <updated>1683539573343</updated>
     </task>
-    <option name="localTasksCounter" value="15" />
+    <task id="LOCAL‎-00015" summary="stage6 part A + B">
+      <created>1685271750671</created>
+      <option name="number" value="00015" />
+      <option name="presentableId" value="LOCAL‎-00015" />
+      <option name="project" value="LOCAL‎" />
+      <updated>1685271750671</updated>
+    </task>
+    <option name="localTasksCounter" value="16" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -336,7 +333,8 @@
     <MESSAGE value="test with problems" />
     <MESSAGE value="Stage 5, adding image file." />
     <MESSAGE value="stage6 part A" />
-    <option name="LAST_COMMIT_MESSAGE" value="stage6 part A" />
+    <MESSAGE value="stage6 part A + B" />
+    <option name="LAST_COMMIT_MESSAGE" value="stage6 part A + B" />
   </component>
   <component name="XDebuggerManager">
     <breakpoint-manager>
